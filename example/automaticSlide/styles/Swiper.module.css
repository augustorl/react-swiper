.container{
    position: relative;
    /* Add any height and width you want for your swiper */
    width: 100%;
    max-width: 1000px;
    height: 250px;

    /* Needed overflow hidden - comment this line to see how the swiper works internaly */
    overflow: hidden;
}

.slideContainer{
    /* Display flex will align the slides elements in one row */
    display: flex;

    /* Width is calculated multiplying the full width of the parent container by the number of slider elements inside the swiper,
    this way THIS container will take the width of the sum of all children elements. Width: calc(100% * numberOfCards) */
   /* Here there's number four because I'm using 4 cards */
    width: calc(100% * 4);
    height: 100%;

    z-index: 10;
}

.slide{
    /* responsive width */
    width: 100%;

    position: relative;
    
    /* This will prevent artefacts when dragging the slide,
     if you need the cards to be clickable check the clickable example */
    pointer-events: none;
    user-select: none;
}

/* Content CSS - Not Important */
.slide img{
    object-fit: cover;
    width: 100%;
    height: 100%;
}

.textSlide{
    width: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 10px;
    text-align: center;

    position: absolute;
    bottom: 0;
}

/* Controls CSS - Not Important (They trigger the function to move the slides) */
.controlsContainer{
    position: absolute;
    top:0;
    z-index: 20;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.controlsContainer button{
    position: absolute;
    pointer-events: all;
    cursor: pointer;

    user-select: none;

    background: none;
    border: 0;
    outline: none;
    width: 50px;
    height: 100%;
    transition: all .3s ease;
}

.controlsContainer button:first-child{
    left: 0;
}

.controlsContainer button:last-child{
    right: 0;
}

.goToContainer{
    margin-top: 100px;
    display: flex;
    gap: 10px;
}

.goToContainer button{
    width: 100px;
    height: 30px;
    cursor: pointer;
    border: none;
}

@media (max-width:472px){
    .goToContainer{
        flex-direction: column;
    }
}